package di

import (
	"context"
	"errors"
	"github.com/google/uuid"
)

const contextKeyID = "_id"

var (
	IDGenerator = uuidGenerator

	ErrContextWithoutID = errors.New("context without ID")
)

type ContextID string

const (
	EmptyContextID = ContextID("")
)

// NewContext returns a new context from the context.Background with a key _id having
// a value generated by the IDGenerator
func NewContext() context.Context {
	return ContextWithID(context.Background())
}

func ContextWithID(ctx context.Context) context.Context {
	return context.WithValue(ctx, contextKeyID, IDGenerator())
}

func GetContextID(ctx context.Context) (ContextID, error) {
	if ctx == nil {
		return EmptyContextID, errors.New("ctx cannot be nil")
	}
	 id, ok := ctx.Value(contextKeyID).(ContextID)
	 if !ok {
		 return EmptyContextID, ErrContextWithoutID
	 }
	 return id, nil
}

func uuidGenerator() ContextID {
	return ContextID(uuid.New().String())
}
